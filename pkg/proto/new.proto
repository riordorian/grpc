syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
//import "google/protobuf/empty.proto";
import "uuid.proto";
import "media.proto";

package grpc;

option go_package = "./grpc";

enum Status {
  INACTIVE = 0;
  ACTIVE = 1;
  DRAFT = 2;
}

enum Sort {
  DESC = 0;
  ASC = 1;
}

message Media {
  repeated MediaItem Media = 1;
}

message New {
  UUID Id = 1;
  string Title= 2;
  string Text = 3;
  string ActivePeriod = 4;
  optional Status Status = 5;
  optional Media Media = 6;
  optional google.protobuf.Timestamp CreatedAt = 7;
  optional google.protobuf.Timestamp UpdatedAt = 8;
  optional string Tags = 9;
}

message NewsList {
  repeated New News = 1;
}

message ListStatusFilter {
  repeated Status Status = 1;
}

message ListRequest {
  optional Sort Sort = 1;
  optional UUID Author = 2;
  optional Status Status = 3;
  optional string Query = 4;
  optional int32 Page = 5;
}

// TODO: How to use uuid?
message InfoRequest {
//  UUID Id = 1;
  string Id = 1;
}

message CreateRequest {
  string Title = 1;
  string Text = 2;
  optional string Tags = 5;
  repeated MediaUploadRequest Media = 6;
}

message CreateResponse {
  bool Status = 1;
}

message String {
  string Id = 1;
}
service News {
  rpc List (ListRequest) returns (NewsList) {
    option (google.api.http) = {
      get: "/v1/news"
    };
  };
  rpc Create (stream CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/v1/news/create"
      body: "*"
    };
  };

  /*rpc Info (InfoRequest) returns (New) {
    option (google.api.http) = {
      get: "/v1/news/{Id}"
    };
  };
  rpc Update (New) returns (google.protobuf.Empty) {};
  rpc Delete (UUID) returns (google.protobuf.Empty) {};*/
}